import type { arraySubclassToReadonly } from "./generics.js";
export declare class Path extends Array<string> {
    static fromString(s: string, delimiter?: string): Path;
    toString(delimiter?: string): string;
}
export type ReadonlyPath = arraySubclassToReadonly<Path>;
export type pathToString<segments extends string[], delimiter extends string = "/"> = segments extends [] ? "/" : join<segments, delimiter>;
export type join<segments extends string[], delimiter extends string = "/", result extends string = ""> = segments extends [infer head extends string, ...infer tail extends string[]] ? join<tail, delimiter, result extends "" ? head : `${result}${delimiter}${head}`> : result;
export declare const getPath: (root: unknown, path: string[]) => unknown;
