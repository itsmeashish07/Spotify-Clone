import type { evaluate } from "../../utils/generics.js";
import type { inferDefinition, validateDefinition } from "../definition.js";
import { writeImplicitNeverMessage } from "./intersection.js";
import type { PrefixParser } from "./tuple.js";
export declare const parseKeyOfTuple: PrefixParser<"keyof">;
export type inferKeyOfExpression<operandDef, $> = evaluate<keyof inferDefinition<operandDef, $>>;
export type validateKeyOfExpression<operandDef, $> = readonly [
    "keyof",
    inferKeyOfExpression<operandDef, $> extends never ? writeImplicitNeverMessage<[], "keyof"> : validateDefinition<operandDef, $>
];
