import type { Dict } from "../../utils/generics.js";
import type { Node, TraversalNode } from "../node.js";
import type { FlattenAndPushRule } from "./rules.js";
export type PropsRule<$ = Dict> = {
    [propKey in string]: Prop<$>;
};
export type Prop<$ = Dict, node extends Node<$> = Node<$>> = node | OptionalProp<$, node> | PrerequisiteProp<$, node>;
export type OptionalProp<$ = Dict, node extends Node<$> = Node<$>> = ["?", node];
export type PrerequisiteProp<$ = Dict, node extends Node<$> = Node<$>> = [
    "!",
    node
];
export type PropsRecordKey = "distilledProps" | "strictProps";
export type PropsRecordEntry<kind extends PropsRecordKey = PropsRecordKey> = [
    kind,
    {
        required: {
            [propKey in string]: TraversalNode;
        };
        optional: {
            [propKey in string]: TraversalNode;
        };
        index?: TraversalNode;
    }
];
export type DistilledPropsEntry = PropsRecordEntry<"distilledProps">;
export type StrictPropsEntry = PropsRecordEntry<"strictProps">;
export type PropEntry = RequiredPropEntry | OptionalPropEntry | IndexPropEntry | PrerequisitePropEntry;
export type PrerequisitePropEntry = ["prerequisiteProp", TraversalProp];
export type RequiredPropEntry = ["requiredProp", TraversalProp];
export type OptionalPropEntry = ["optionalProp", TraversalProp];
export type IndexPropEntry = ["indexProp", TraversalNode];
export type TraversalProp<key extends string = string, node extends TraversalNode = TraversalNode> = [key, node];
export declare const isOptional: (prop: Prop) => prop is OptionalProp<Dict, Node<Dict>>;
export declare const isPrerequisite: (prop: Prop) => prop is PrerequisiteProp<Dict, Node<Dict>>;
export declare const mappedKeys: {
    readonly index: "[index]";
};
export type MappedKeys = typeof mappedKeys;
export type MappedPropKey = MappedKeys[keyof MappedKeys];
export declare const propToNode: (prop: Prop) => Node<Dict>;
export declare const propsIntersection: import("../compose.js").Intersector<PropsRule<Dict> | undefined>;
export declare const flattenProps: FlattenAndPushRule<PropsRule>;
