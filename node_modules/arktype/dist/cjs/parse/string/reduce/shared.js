"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    writeUnmatchedGroupCloseMessage: ()=>writeUnmatchedGroupCloseMessage,
    unclosedGroupMessage: ()=>unclosedGroupMessage,
    writeOpenRangeMessage: ()=>writeOpenRangeMessage,
    writeUnpairableComparatorMessage: ()=>writeUnpairableComparatorMessage,
    writeMultipleLeftBoundsMessage: ()=>writeMultipleLeftBoundsMessage
});
const _scannerJs = require("../shift/scanner.js");
const writeUnmatchedGroupCloseMessage = (unscanned)=>`Unmatched )${unscanned === "" ? "" : ` before ${unscanned}`}`;
const unclosedGroupMessage = "Missing )";
const writeOpenRangeMessage = (min, comparator)=>`Left bounds are only valid when paired with right bounds (try ...${comparator}${min})`;
const writeUnpairableComparatorMessage = (comparator)=>`Left-bounded expressions must specify their limits using < or <= (was ${comparator})`;
const writeMultipleLeftBoundsMessage = (openLimit, openComparator, limit, comparator)=>`An expression may have at most one left bound (parsed ${openLimit}${_scannerJs.Scanner.invertedComparators[openComparator]}, ${limit}${_scannerJs.Scanner.invertedComparators[comparator]})`;
