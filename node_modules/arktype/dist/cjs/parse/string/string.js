"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    parseString: ()=>parseString,
    maybeNaiveParse: ()=>maybeNaiveParse,
    fullStringParse: ()=>fullStringParse
});
const _nodeJs = require("../../nodes/node.js");
const _dynamicJs = require("./reduce/dynamic.js");
const _operandJs = require("./shift/operand/operand.js");
const _operatorJs = require("./shift/operator/operator.js");
const parseString = (def, ctx)=>ctx.type.scope.parseCache.get(def) ?? ctx.type.scope.parseCache.set(def, maybeNaiveParse(def, ctx) ?? fullStringParse(def, ctx));
const maybeNaiveParse = (def, ctx)=>{
    if (ctx.type.scope.addParsedReferenceIfResolvable(def, ctx)) {
        return def;
    }
    if (def.endsWith("[]")) {
        const elementDef = def.slice(0, -2);
        if (ctx.type.scope.addParsedReferenceIfResolvable(def, ctx)) {
            return (0, _nodeJs.toArrayNode)(elementDef);
        }
    }
};
const fullStringParse = (def, ctx)=>{
    const s = new _dynamicJs.DynamicState(def, ctx);
    (0, _operandJs.parseOperand)(s);
    return loop(s);
};
const loop = (s)=>{
    while(!s.scanner.finalized){
        next(s);
    }
    return s.ejectFinalizedRoot();
};
const next = (s)=>s.hasRoot() ? (0, _operatorJs.parseOperator)(s) : (0, _operandJs.parseOperand)(s);
