"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    parseEnclosed: ()=>parseEnclosed,
    enclosingChar: ()=>enclosingChar,
    writeUnterminatedEnclosedMessage: ()=>writeUnterminatedEnclosedMessage
});
const _regexJs = require("../../../../nodes/rules/regex.js");
const parseEnclosed = (s, enclosing)=>{
    const token = s.scanner.shiftUntil(untilLookaheadIsClosing[enclosing]);
    if (s.scanner.lookahead === "") {
        return s.error(writeUnterminatedEnclosedMessage(token, enclosing));
    }
    // Shift the scanner one additional time for the second enclosing token
    if (s.scanner.shift() === "/") {
        // Cache the regex instance to throw right way if its invalid
        (0, _regexJs.getRegex)(token);
        s.setRoot({
            string: {
                regex: token
            }
        });
    } else {
        s.setRoot({
            string: {
                value: token
            }
        });
    }
};
const enclosingChar = {
    "'": 1,
    '"': 1,
    "/": 1
};
const untilLookaheadIsClosing = {
    "'": (scanner)=>scanner.lookahead === `'`,
    '"': (scanner)=>scanner.lookahead === `"`,
    "/": (scanner)=>scanner.lookahead === `/`
};
const enclosingCharDescriptions = {
    '"': "double-quote",
    "'": "single-quote",
    "/": "forward slash"
};
const writeUnterminatedEnclosedMessage = (fragment, enclosing)=>`${enclosing}${fragment} requires a closing ${enclosingCharDescriptions[enclosing]}`;
