"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    parseOperator: ()=>parseOperator,
    writeUnexpectedCharacterMessage: ()=>writeUnexpectedCharacterMessage,
    incompleteArrayTokenMessage: ()=>incompleteArrayTokenMessage
});
const _errorsJs = require("../../../../utils/errors.js");
const _genericsJs = require("../../../../utils/generics.js");
const _scannerJs = require("../scanner.js");
const _boundsJs = require("./bounds.js");
const _divisorJs = require("./divisor.js");
const parseOperator = (s)=>{
    const lookahead = s.scanner.shift();
    return lookahead === "" ? s.finalize() : lookahead === "[" ? s.scanner.shift() === "]" ? s.rootToArray() : s.error(incompleteArrayTokenMessage) : (0, _genericsJs.isKeyOf)(lookahead, _scannerJs.Scanner.branchTokens) ? s.pushRootToBranch(lookahead) : lookahead === ")" ? s.finalizeGroup() : (0, _genericsJs.isKeyOf)(lookahead, _scannerJs.Scanner.comparatorStartChars) ? (0, _boundsJs.parseBound)(s, lookahead) : lookahead === "%" ? (0, _divisorJs.parseDivisor)(s) : lookahead === " " ? parseOperator(s) : (0, _errorsJs.throwInternalError)(writeUnexpectedCharacterMessage(lookahead));
};
const writeUnexpectedCharacterMessage = (char)=>`Unexpected character '${char}'`;
const incompleteArrayTokenMessage = `Missing expected ']'`;
