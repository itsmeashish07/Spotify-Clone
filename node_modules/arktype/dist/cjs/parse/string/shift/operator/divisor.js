"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    parseDivisor: ()=>parseDivisor,
    writeInvalidDivisorMessage: ()=>writeInvalidDivisorMessage
});
const _genericsJs = require("../../../../utils/generics.js");
const _numericLiteralsJs = require("../../../../utils/numericLiterals.js");
const _divisorJs = require("../../../ast/divisor.js");
const parseDivisor = (s)=>{
    const divisorToken = s.scanner.shiftUntilNextTerminator();
    const divisor = (0, _numericLiteralsJs.tryParseWellFormedInteger)(divisorToken, writeInvalidDivisorMessage(divisorToken));
    if (divisor === 0) {
        s.error(writeInvalidDivisorMessage(0));
    }
    const rootDomains = (0, _genericsJs.objectKeysOf)(s.resolveRoot());
    if (rootDomains.length === 1 && rootDomains[0] === "number") {
        s.intersect({
            number: {
                divisor
            }
        });
    } else {
        s.error((0, _divisorJs.writeIndivisibleMessage)(s.rootToString()));
    }
};
const writeInvalidDivisorMessage = (divisor)=>`% operator must be followed by a non-zero integer literal (was ${divisor})`;
