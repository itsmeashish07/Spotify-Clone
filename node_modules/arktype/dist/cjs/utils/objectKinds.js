"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    defaultObjectKinds: ()=>defaultObjectKinds,
    objectKindOf: ()=>objectKindOf,
    hasObjectKind: ()=>hasObjectKind,
    isArray: ()=>isArray,
    objectKindDescriptions: ()=>objectKindDescriptions,
    getExactConstructorObjectKind: ()=>getExactConstructorObjectKind
});
const _domainsJs = require("./domains.js");
const _genericsJs = require("./generics.js");
const defaultObjectKinds = {
    Array,
    Date,
    Error,
    Function,
    Map,
    RegExp,
    Set,
    Object,
    String,
    Number,
    Boolean,
    WeakMap,
    WeakSet,
    Promise
};
const objectKindOf = (data, kinds)=>{
    if ((0, _domainsJs.domainOf)(data) !== "object") {
        return undefined;
    }
    const kindSet = kinds ?? defaultObjectKinds;
    let prototype = Object.getPrototypeOf(data);
    while(prototype?.constructor && (!kindSet[prototype.constructor.name] || !(data instanceof kindSet[prototype.constructor.name]))){
        prototype = Object.getPrototypeOf(prototype);
    }
    return prototype?.constructor?.name;
};
const hasObjectKind = (data, kind, kinds)=>objectKindOf(data, kinds) === kind;
const isArray = (data)=>Array.isArray(data);
const objectKindDescriptions = {
    Object: "an object",
    Array: "an array",
    Function: "a function",
    Date: "a Date",
    RegExp: "a RegExp",
    Error: "an Error",
    Map: "a Map",
    Set: "a Set",
    String: "a String object",
    Number: "a Number object",
    Boolean: "a Boolean object",
    Promise: "a Promise",
    WeakMap: "a WeakMap",
    WeakSet: "a WeakSet"
};
const getExactConstructorObjectKind = (constructor)=>{
    const constructorName = Object(constructor).name;
    return constructorName && (0, _genericsJs.isKeyOf)(constructorName, defaultObjectKinds) && defaultObjectKinds[constructorName] === constructor ? constructorName : undefined;
};
