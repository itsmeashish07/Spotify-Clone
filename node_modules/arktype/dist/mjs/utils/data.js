function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
import { domainOf } from "./domains.js";
import { stringify } from "./serialize.js";
export const sizeOf = (data)=>typeof data === "string" || Array.isArray(data) ? data.length : typeof data === "number" ? data : 0;
export const unitsOf = (data)=>typeof data === "string" ? "characters" : Array.isArray(data) ? "items long" : "";
export class DataWrapper {
    toString() {
        return stringify(this.value);
    }
    get domain() {
        return domainOf(this.value);
    }
    get size() {
        return sizeOf(this.value);
    }
    get units() {
        return unitsOf(this.value);
    }
    get className() {
        return Object(this.value).constructor.name;
    }
    constructor(value){
        _defineProperty(this, "value", void 0);
        this.value = value;
    }
}
