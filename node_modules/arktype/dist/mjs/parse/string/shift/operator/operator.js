import { throwInternalError } from "../../../../utils/errors.js";
import { isKeyOf } from "../../../../utils/generics.js";
import { Scanner } from "../scanner.js";
import { parseBound } from "./bounds.js";
import { parseDivisor } from "./divisor.js";
// @snipStart:parseOperator
export const parseOperator = (s)=>{
    const lookahead = s.scanner.shift();
    return lookahead === "" ? s.finalize() : lookahead === "[" ? s.scanner.shift() === "]" ? s.rootToArray() : s.error(incompleteArrayTokenMessage) : isKeyOf(lookahead, Scanner.branchTokens) ? s.pushRootToBranch(lookahead) : lookahead === ")" ? s.finalizeGroup() : isKeyOf(lookahead, Scanner.comparatorStartChars) ? parseBound(s, lookahead) : lookahead === "%" ? parseDivisor(s) : lookahead === " " ? parseOperator(s) : throwInternalError(writeUnexpectedCharacterMessage(lookahead));
};
// @snipEnd
export const writeUnexpectedCharacterMessage = (char)=>`Unexpected character '${char}'`;
export const incompleteArrayTokenMessage = `Missing expected ']'`;
