import { isConfigNode, rootIntersection } from "../../nodes/node.js";
import { parseDefinition } from "../definition.js";
import { distributeFunctionToNode } from "./distributableFunction.js";
export const parseNarrowTuple = (def, ctx)=>{
    const inputNode = parseDefinition(def[0], ctx);
    const resolution = ctx.type.scope.resolveNode(inputNode);
    const hasConfig = isConfigNode(resolution);
    const typeNode = hasConfig ? resolution.node : resolution;
    const result = rootIntersection(inputNode, distributeFunctionToNode(def[2], typeNode, ctx, "narrow"), ctx.type);
    return hasConfig ? {
        config: resolution.config,
        node: result
    } : result;
};
